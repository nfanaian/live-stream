{"ast":null,"code":"var _jsxFileName = \"/Users/navid/Documents/Code/udemy/react/s16/streams/client/src/components/GoogleAuth.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      }\n\n      this.setState({\n        isSignedIn\n      });\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        clientId: \"537122754541-f9o5ihjq4bceggstnab2vr7ah6m2eqtr.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return React.createElement(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \"Sign Out\");\n    } else {\n      return React.createElement(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), \"Sign In with Google\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nexport default connect(null, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/navid/Documents/Code/udemy/react/s16/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","setState","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD+B;;AAAA,SAmBvCC,YAnBuC,GAmBvBD,UAAD,IAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,aAAKE,KAAL,CAAWP,MAAX;AACD;;AACD,WAAKQ,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KAxBsC;;AAAA,SA0BvCI,aA1BuC,GA0BvB,MAAM;AACpB,WAAKC,IAAL,CAAUV,MAAV;AACD,KA5BsC;;AAAA,SA8BvCW,cA9BuC,GA8BtB,MAAM;AACrB,WAAKD,IAAL,CAAUT,OAAV;AACD,KAhCsC;AAAA;;AAGvCW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKd,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAE,KAAKK,IAAL,CAAUL,UAAV,CAAqBkB,GAArB;AAAd,SAAd;AACA,aAAKb,IAAL,CAAUL,UAAV,CAAqBmB,MAArB,CAA4B,KAAKlB,YAAjC;AACD,OAVH;AAWD,KAZD;AAaD;;AAiBDmB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKrB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKM,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,aADF;AAMD,KAPM,MAOA;AACL,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKF,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,wBADF;AAMD;AACF;;AAEDiB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,gBAAL,EAAN,CAAP;AACD;;AAxDsC;;AA0DzC,eAAe1B,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAP,CAAP,CAAmCC,UAAnC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            \"537122754541-f9o5ihjq4bceggstnab2vr7ah6m2eqtr.apps.googleusercontent.com\",\n          scope: \"email\"\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn()\n    }\n    this.setState({ isSignedIn });\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null; \n    } else if (this.state.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\nexport default connect(null, { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}