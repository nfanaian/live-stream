{"ast":null,"code":"var _jsxFileName = \"/Users/navid/Documents/Code/udemy/react/s16/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.renderAdmin(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/streams/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Create Stream\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.renderList()), this.renderCreate());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/navid/Documents/Code/udemy/react/s16/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","id","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAAgD;AAC9C,aACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAI;AACtC,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,WAAL,CAAiBC,MAAjB,CADH,EAEE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAACO,KADV,EAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BP,MAAM,CAACQ,WAArC,CAFF,CAHF,CADF;AAUD,KAXM,CAAP;AAYD;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKX,KAAL,CAAWY,UAAf,EAA2B;AACzB,aAAQ;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADM,CAAR;AAKD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKT,UAAL,EAAjC,CAFF,EAGG,KAAKM,YAAL,EAHH,CADF;AAOD;;AAhDsC;;AAmDzC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,OAAO,EAAEW,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACV,OAApB,CADJ;AAELF,IAAAA,aAAa,EAAEY,KAAK,CAACG,IAAN,CAAWhB,MAFrB;AAGLS,IAAAA,UAAU,EAAEI,KAAK,CAACG,IAAN,CAAWP;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAelB,OAAO,CACpBqB,eADoB,EAEpB;AAAEnB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from \"../../actions\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">Edit</button>\n          <button className=\"ui button negative\">Delete</button>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (<div style={{ textAlign: 'right'}}>\n        <Link to=\"/streams/new\">\n        Create Stream\n        </Link>\n      </div>);\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStreams }\n)(StreamList);\n"]},"metadata":{},"sourceType":"module"}